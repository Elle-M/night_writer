module Alphabetable

  # def alphabet 
  #   {
  #   "a" => ["0.", "..", ".."],
  #   "b" => ["00", "..", ".."],
  #   "c" => ["0.", ".0", ".."],
  #   "d" => ["0.", ".0", "0."],
  #   "e" => ["0.", "..", "0."],
  #   "f" => ["00", ".0", ".."],
  #   "g" => ["00", ".0", "0."],
  #   "h" => ["00", "..", "0."],
  #   "i" => [".0", ".0", ".."],
  #   "j" => [".0", ".0", "0."],
  #   "k" => ["0.", "0.", ".."],
  #   "l" => ["00", "0.", ".."],
  #   "m" => ["0.", "00", ".."],
  #   "n" => ["0.", "00", "0."],
  #   "o" => ["0.", "0.", "0."],
  #   "p" => ["00", "00", ".."],
  #   "q" => ["00", "00", "0."],
  #   "r" => ["00", "0.", "0."],
  #   "s" => [".0", "00", ".."],
  #   "t" => [".0", "00", "0."],
  #   "u" => ["0.", "0.", ".0"],
  #   "v" => ["00", "0.", ".0"],
  #   "w" => [".0", ".0", "00"],
  #   "x" => ["0.", "00", ".0"],
  #   "y" => ["0.", "00", "00"],
  #   "z" => ["0.", "0.", "00"]
  #   }
  # end

  def alphabet 
    {
    'a' => ['0.', '..', '..'],
    'b' => ['0.', '0.', '..'],
    'c' => ['00', '..', '..'],
    'd' => ['00', '.0', '..'],
    'e' => ['0.', '.0', '..'],
    'f' => ['00', '0.', '..'],
    'g' => ['00', '00', '..'],
    'h' => ['0.', '00', '..'],
    'i' => ['.0', '0.', '..'],
    'j' => ['.0', '..', '..'],
    'k' => ['0.', '..', '0.'],
    'l' => ['0.', '0.', '0.'],
    'm' => ['00', '..', '0.'],
    'n' => ['00', '.0', '0.'],
    'o' => ['0.', '.0', '0.'],
    'p' => ['00', '0.', '0.'],
    'q' => ['00', '00', '0.'],
    'r' => ['0.', '00', '0.'],
    's' => ['.0', '0.', '0.'],
    't' => ['.0', '00', '0.'],
    'u' => ['0.', '..', '00'],
    'v' => ['0.', '0.', '00'],
    'w' => ['.0', '00', '.0'],
    'x' => ['00', '..', '00'],
    'y' => ['00', '.0', '00'],
    'z' => ['0.', '.0', '00']
  }
  end

  def letter_to_braille
    alphabet
  end

  def braille_to_letter
    alphabet.invert
  end
end
